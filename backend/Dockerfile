# Создать образ на основе базового слоя,
# который содержит файлы ОС и интерпретатор Python 3.9.
FROM python:3.9

# Переходим в образе в директорию /app: в ней будем хранить код проекта.
# Если директории с указанным именем нет, она будет создана.
# Название директории может быть любым.
WORKDIR /app
# Дальнейшие инструкции будут выполняться в директории /app

RUN pip install gunicorn==20.1.0

# Скопировать файл requirements.txt из директории, где хранится Dockerfile,
# в текущую директорию образа.
COPY requirements.txt .

# Выполнить в текущей директории команду терминала
# для установки зависимостей.
RUN pip install -r requirements.txt --no-cache-dir
# Если не использовать параметр --no-cache-dir,
# то pip сохранит в служебной директории (прямо в образе) копии пакетов,
# а это будет лишним грузом.

# # В образе нет нужной утилиты? Ок, установим её!
# # Обратите внимание: sudo тут не нужен, так как внутри контейнера
# # все команды выполняются от имени root
# RUN apt update && apt -y install zip
# RUN zip arch.zip file.txt

# Скопировать всё содержимое директории, где хранится Dockerfile,
# в текущую директорию образа.
# Точка в обоих случаях обозначает текущую директорию:
# первая на хосте, вторая — внутри образа
COPY . .

# # При старте контейнера запустить сервер разработки.
# CMD ["python", "manage.py", "runserver", "0:8000"]

CMD ["gunicorn", "--bind", "0.0.0.0:8000", "backend.wsgi"]
